// <auto-generated/>
#pragma warning disable CS0618
using Fingrid.API.Data;
using Fingrid.API.Datasets;
using Fingrid.API.Health;
using Fingrid.API.Notifications;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Fingrid.API
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FingridAPI : BaseRequestBuilder
    {
        /// <summary>The data property</summary>
        public global::Fingrid.API.Data.DataRequestBuilder Data
        {
            get => new global::Fingrid.API.Data.DataRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The datasets property</summary>
        public global::Fingrid.API.Datasets.DatasetsRequestBuilder Datasets
        {
            get => new global::Fingrid.API.Datasets.DatasetsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The health property</summary>
        public global::Fingrid.API.Health.HealthRequestBuilder Health
        {
            get => new global::Fingrid.API.Health.HealthRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The notifications property</summary>
        public global::Fingrid.API.Notifications.NotificationsRequestBuilder Notifications
        {
            get => new global::Fingrid.API.Notifications.NotificationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Fingrid.API.FingridAPI"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FingridAPI(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "https://data.fingrid.fi/api";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
#pragma warning restore CS0618

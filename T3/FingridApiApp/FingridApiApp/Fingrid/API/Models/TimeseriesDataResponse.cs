// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Fingrid.API.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::Fingrid.API.Models.IWithPagination_TimeseriesDataOrTimeseriesDataOneRowPerTimePeriod_"/>, <see cref="global::Fingrid.API.Models.TimeseriesDataCsvResponse"/>, <see cref="global::Fingrid.API.Models.TimeseriesDataXmlResponse"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TimeseriesDataResponse : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::Fingrid.API.Models.IWithPagination_TimeseriesDataOrTimeseriesDataOneRowPerTimePeriod_"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Fingrid.API.Models.IWithPagination_TimeseriesDataOrTimeseriesDataOneRowPerTimePeriod_? IWithPaginationTimeseriesDataOrTimeseriesDataOneRowPerTimePeriod { get; set; }
#nullable restore
#else
        public global::Fingrid.API.Models.IWithPagination_TimeseriesDataOrTimeseriesDataOneRowPerTimePeriod_ IWithPaginationTimeseriesDataOrTimeseriesDataOneRowPerTimePeriod { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Fingrid.API.Models.TimeseriesDataCsvResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Fingrid.API.Models.TimeseriesDataCsvResponse? TimeseriesDataCsvResponse { get; set; }
#nullable restore
#else
        public global::Fingrid.API.Models.TimeseriesDataCsvResponse TimeseriesDataCsvResponse { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::Fingrid.API.Models.TimeseriesDataXmlResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Fingrid.API.Models.TimeseriesDataXmlResponse? TimeseriesDataXmlResponse { get; set; }
#nullable restore
#else
        public global::Fingrid.API.Models.TimeseriesDataXmlResponse TimeseriesDataXmlResponse { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Fingrid.API.Models.TimeseriesDataResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Fingrid.API.Models.TimeseriesDataResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var result = new global::Fingrid.API.Models.TimeseriesDataResponse();
            result.IWithPaginationTimeseriesDataOrTimeseriesDataOneRowPerTimePeriod = new global::Fingrid.API.Models.IWithPagination_TimeseriesDataOrTimeseriesDataOneRowPerTimePeriod_();
            result.TimeseriesDataCsvResponse = new global::Fingrid.API.Models.TimeseriesDataCsvResponse();
            result.TimeseriesDataXmlResponse = new global::Fingrid.API.Models.TimeseriesDataXmlResponse();
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(IWithPaginationTimeseriesDataOrTimeseriesDataOneRowPerTimePeriod != null || TimeseriesDataCsvResponse != null || TimeseriesDataXmlResponse != null)
            {
                return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(IWithPaginationTimeseriesDataOrTimeseriesDataOneRowPerTimePeriod, TimeseriesDataCsvResponse, TimeseriesDataXmlResponse);
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Fingrid.API.Models.IWithPagination_TimeseriesDataOrTimeseriesDataOneRowPerTimePeriod_>(null, IWithPaginationTimeseriesDataOrTimeseriesDataOneRowPerTimePeriod, TimeseriesDataCsvResponse, TimeseriesDataXmlResponse);
        }
    }
}
#pragma warning restore CS0618
